"""
Django settings for auth project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'n=x+n#(z8t@v&w$t(!!5c-hve$4vhkkyom4)dkpypc#^(i571-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third pary apps
    'rest_framework',

    'oauth2_provider',
    'social_django',
    'rest_framework_social_oauth2',    

    # local apps
    'basic_auth',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'auth.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',               
            ],
        },
    },
]

WSGI_APPLICATION = 'auth.wsgi.application'



# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    "DEFAULT_AUTHENTICATION_CLASSES": (
        'basic_auth.backends.JWTAuthentication',

        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework_social_oauth2.authentication.SocialAuthentication',
        #'basic_auth.backends.JWTAuthentication',        

    ), 
    "DEFAULT_PERMISSION_CLASSES": (
        'basic_auth.backends.JWTAuthentication',
        'rest_framework.permissions.IsAuthenticated',
    )
}

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'pamisol_demo',
        'USER': 'pamisol',
        'PASSWORD': 'q1w2e3r4',
        'HOST': '192.168.0.9',
        'PORT': "3306"
    }
}

AUTH_USER_MODEL = 'basic_auth.User'


AUTHENTICATION_BACKENDS = (
    'social_core.backends.facebook.FacebookAppOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',

    # django-rest-framework-social-oauth2
    'rest_framework_social_oauth2.backends.DjangoOAuth2',

    # Django
    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_FACEBOOK_KEY = '178756992886101'
SOCIAL_AUTH_FACEBOOK_SECRET = '19272361271093fc6253d6c0f08ea371'

SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']

SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields' : 'id, name, email'
}

'''
SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.user.user_details',
    'social_core.pipeline.user.create_user',

    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',

    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    
)
'''

SOCIAL_AUTH_PIPELINE = (

    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.social_auth.associate_by_email',    
    #'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    #'basic_auth.social.create_user',

    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',

    
)


'''
status_code ={
    "REGISTER_SUCCESS": {
        "code": 1000,
        "msg": "Register Success",
    },

    "REGISTER_FAILURE": {
        "code": 1001,
        "msg": "Register Failure",
    },

    "LOGIN_SUCCESS": {
        "code": 1010,
        "msg": "Login Success",
    },

    "LOGIN_FAILURE": {
        "code": 1011,
        "msg": "Login Failure",
    },

    "LOGOUT_SUCCESS": {
        "code": 1020,
        "msg": "Logout Success",
    },

    "LOGOUT_FAILURE": {
        "code": 1021,
        "msg": "Logout Failure",
    },

    "SAVE_TOKEN_SUCCESS":{
        "code": 1030,
        "msg": "Token save Success"
    },

    "VERIFY_TOKEN_SUCCESS":{
        "code": 1040,
        "msg": "Token Verification Success"
    },

    "EXPIRE_TOKEN_SUCCESS":{
        "code": 1050,
        "msg": "Token Expiration Success"
    },

    "AUTH_SUCCESS":{
        "code": 1060,
        "msg": "Authentication Success"
    },

    "AUTH_FAILURE":{
        "code": 1061,
        "msg": "Authentication Failure"
    },

    




}
'''